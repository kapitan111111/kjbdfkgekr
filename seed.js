const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
require('dotenv').config();

const User = require('./models/User');
const Schedule = require('./models/Schedule');
const News = require('./models/News');

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/school_app';

const seedData = async () => {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('Connected to MongoDB');

    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    await User.deleteMany({});
    await Schedule.deleteMany({});
    await News.deleteMany({});
    console.log('Cleared existing data');

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await User.create([
      {
        email: 'student@school.ru',
        password: '123456',
        name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        role: 'student',
        group: 'Frontend-2024'
      },
      {
        email: 'teacher@school.ru',
        password: '123456',
        name: '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤',
        role: 'teacher'
      },
      {
        email: 'admin@school.ru',
        password: '123456',
        name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã',
        role: 'admin'
      },
      {
        email: 'student2@school.ru',
        password: '123456',
        name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
        role: 'student',
        group: 'Frontend-2024'
      },
      {
        email: 'teacher2@school.ru',
        password: '123456',
        name: '–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        role: 'teacher'
      }
    ]);
    console.log('Created users');

    // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    const schedules = await Schedule.create([
      {
        date: '2024-01-15',
        startTime: '10:00',
        endTime: '11:30',
        subject: 'React Native',
        teacher: '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤',
        teacherId: users[1]._id,
        group: 'Frontend-2024',
        classroom: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 101',
        type: 'lecture'
      },
      {
        date: '2024-01-15',
        startTime: '12:00',
        endTime: '13:30',
        subject: 'JavaScript Advanced',
        teacher: '–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        teacherId: users[4]._id,
        group: 'Frontend-2024',
        classroom: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 102',
        type: 'practice'
      },
      {
        date: '2024-01-16',
        startTime: '09:00',
        endTime: '10:30',
        subject: 'TypeScript',
        teacher: '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤',
        teacherId: users[1]._id,
        group: 'Frontend-2024',
        classroom: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 201',
        type: 'lecture'
      },
      {
        date: '2024-01-16',
        startTime: '11:00',
        endTime: '12:30',
        subject: 'Node.js',
        teacher: '–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        teacherId: users[4]._id,
        group: 'Backend-2024',
        classroom: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 103',
        type: 'lab'
      }
    ]);
    console.log('Created schedules');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
    const news = await News.create([
      {
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–æ–≤–æ–º —É—á–µ–±–Ω–æ–º –≥–æ–¥—É!',
        content: '–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ –Ω–æ–≤–æ–º —É—á–µ–±–Ω–æ–º –≥–æ–¥—É! –ñ–µ–ª–∞–µ–º —É—Å–ø–µ—Ö–æ–≤ –≤ —É—á–µ–±–µ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–∏.',
        author: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã',
        authorId: users[2]._id,
        importance: 'high',
        targetGroups: ['Frontend-2024', 'Backend-2024', 'Design-2024']
      },
      {
        title: '–í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏',
        content: '–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –≤ –ø—è—Ç–Ω–∏—Ü—É –∑–∞–Ω—è—Ç–∏—è –Ω–∞—á–Ω—É—Ç—Å—è –Ω–∞ —á–∞—Å –ø–æ–∑–∂–µ –≤ —Å–≤—è–∑–∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏.',
        author: '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤',
        authorId: users[1]._id,
        importance: 'medium',
        targetGroups: ['Frontend-2024']
      },
      {
        title: '–ù–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
        content: '–°–æ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –∫—É—Ä—Å –ø–æ React Native. –í—Å–µ –∂–µ–ª–∞—é—â–∏–µ –º–æ–≥—É—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
        author: '–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        authorId: users[4]._id,
        importance: 'low',
        targetGroups: ['Frontend-2024', 'Backend-2024']
      }
    ]);
    console.log('Created news');

    console.log('üéâ Database seeded successfully!');
    console.log('üìä Created:');
    console.log(`   üë• ${users.length} users`);
    console.log(`   üìÖ ${schedules.length} schedule items`);
    console.log(`   üì∞ ${news.length} news items`);
    console.log('');
    console.log('üîë Demo accounts:');
    console.log('   Student: student@school.ru / 123456');
    console.log('   Teacher: teacher@school.ru / 123456');
    console.log('   Admin: admin@school.ru / 123456');

  } catch (error) {
    console.error('Error seeding database:', error);
  } finally {
    await mongoose.connection.close();
    console.log('Database connection closed');
  }
};

seedData();