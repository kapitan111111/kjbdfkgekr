import { User } from '../types';
import { apiService } from './api';

export const login = async (email: string, password: string): Promise<User> => {
  try {
    console.log('üîê Attempting login for:', email);

    const response = await apiService.login(email, password);
    console.log('‚úÖ Login successful in authService');

    return response.user;
  } catch (error: any) {
    console.error('‚ùå Login error in authService:', error);

    if (error.message === 'Network request failed') {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n‚Ä¢ –ó–∞–ø—É—â–µ–Ω –ª–∏ –±—ç–∫–µ–Ω–¥ (npm run dev –≤ –ø–∞–ø–∫–µ backend)\n‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ URL API');
    }

    if (error.message.includes('401')) {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å');
    }

    throw new Error(error.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
  }
};

export const logout = async (): Promise<void> => {
  try {
    apiService.setToken('');
    await AsyncStorage.removeItem('token');
    await AsyncStorage.removeItem('user');
    console.log('‚úÖ Logout successful');
  } catch (error) {
    console.error('Error during logout:', error);
  }
};

export const setAuthToken = (token: string): void => {
  apiService.setToken(token);
};